import type { NextPage } from "next"
import Head from "next/head"
import About from "../components/aboutPage/About"
import Background from "../components/Background"
import Blog from "../components/blogsPage/Blogs"
import Contact from "../components/contactPage/Contact"
import LoaderPage from "../components/LoaderPage"
import Menus from "../components/Menus"
import ProfileCard from "../components/ProfileCard"
import Resume from "../components/resumePage/Resume"
import Works from "../components/worksPage/Works"
import "react-loading-skeleton/dist/skeleton.css"
import client, { currentMenu } from "../apollo-client"
import profileOperations from "../graphqlOperations/profile"
import { ProfileData } from "../types"
import { useReactiveVar } from "@apollo/client"
import { menus } from "../data"
import { AnimatePresence, motion } from "framer-motion"

interface Props {
  profileData: ProfileData
}

const clipPaths = [
  "polygon(0 50%, 100% 50%, 100% 50%, 0 50%)",
  "polygon(50% 0, 50% 0, 50% 100%, 50% 100%)",
]

const Home: NextPage<Props> = ({ profileData }) => {
  const menuId = useReactiveVar(currentMenu)

  return (
    <main className="min-h-screen relative home flex justify-center items-center">
      <Head>
        <title>Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <LoaderPage /> */}

      <Background />
      <section className="z-10 w-[126.8rem] h-[62.5rem] flex">
        <Menus />
        <ProfileCard profileData={profileData} />

        <div className="w-[70.5rem] h-full py-6">
          <div className="relative bg-gray-900 h-full before:content-[''] before:absolute before:top-0 before:left-0 before:right-[0.7rem] before:h-6 before:bg-gray-900 before:z-30 after:content-[''] after:absolute after:bottom-0 after:left-0 after:right-[0.7rem] after:h-6 after:bg-gray-900 after:z-30">
            <AnimatePresence mode="wait">
              {menus.map(
                (m) =>
                  menuId === m.id && (
                    <motion.div
                      key={m.id}
                      className="bg-gray-900 w-full max-h-full h-full overflow-y-scroll myScroll"
                      initial="initialState"
                      animate="animateState"
                      exit="exitState"
                      transition={{
                        duration: 0.75,
                      }}
                      variants={{
                        initialState: {
                          opacity: 0,
                          clipPath: "polygon(0 0, 100% 0, 100% 100%, 0% 100%)",
                        },
                        animateState: {
                          opacity: 1,
                          clipPath: "polygon(0 0, 100% 0, 100% 100%, 0% 100%)",
                        },
                        exitState: {
                          clipPath:
                            clipPaths[
                              Math.floor(Math.random() * clipPaths.length)
                            ],
                        },
                      }}
                    >
                      <m.Component />
                    </motion.div>
                  )
              )}
            </AnimatePresence>
          </div>
        </div>
      </section>
    </main>
  )
}

export async function getStaticProps() {
  const { data } = await client.query({
    query: profileOperations.Queries.getProfile,
  })

  return {
    props: {
      profileData: data.profiles[0],
      revalidate: 3600,
    },
  }
}

export default Home
